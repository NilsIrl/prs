image: "rust:slim"

stages:
  - check
  - build
  - test
  - release
  - package

# Variable defaults
variables:
  RUST_VERSION: stable
  RUST_TARGET: x86_64-unknown-linux-gnu

# Cache rust/cargo/build artifacts
cache:
  key: "$CI_PIPELINE_ID-$RUST_VERSION"
  paths:
    - /usr/local/cargo/registry/
    - /usr/local/rustup/toolchains/
    - /usr/local/rustup/update-hashes/
    - target/

# Install compiler and OpenSSL dependencies
before_script:
  - apt-get update
  - apt-get install -y --no-install-recommends libgpgme-dev build-essential pkg-config xorg-dev python3 libx11-xcb-dev libgl1-mesa-dev libdbus-1-dev
  - |
    rustup install $RUST_VERSION
    rustup default $RUST_VERSION
  - |
    rustc --version
    cargo --version

# Check on stable, beta and nightly 
.check-base: &check-base
  stage: check
  script:
    - cargo check --verbose
check-stable:
  <<: *check-base
check-beta:
  <<: *check-base
  variables:
    RUST_VERSION: beta
check-nightly:
  <<: *check-base
  variables:
    RUST_VERSION: nightly
check-old:
  <<: *check-base
  variables:
    RUST_VERSION: "1.45.0"

# Build using Rust stable
build-x86_64-linux-gnu:
  stage: build
  needs: []
  script:
    - cargo build --target=$RUST_TARGET --release --verbose
    - mv target/$RUST_TARGET/release/prs ./prs-$RUST_TARGET
    - strip -g ./prs-$RUST_TARGET
  artifacts:
    name: prs-x86_64-linux-gnu
    paths:
      - prs-$RUST_TARGET
    expire_in: 1 month

# Build a static version
build-x86_64-linux-musl:
  stage: build
  needs: []
  variables:
    RUST_TARGET: x86_64-unknown-linux-musl
    PKG_CONFIG_ALLOW_CROSS: 1
  script:
    - apt-get install -y --no-install-recommends bzip2 gnupg2 curl

    - export TARGET="x86_64-unknown-linux-musl"

    - export LIBGPG_ERROR_VER=1.39
    - cd /usr/src
    - curl -sSL "https://www.gnupg.org/ftp/gcrypt/libgpg-error/libgpg-error-${LIBGPG_ERROR_VER}.tar.bz2" | tar -xj
    - cd libgpg-error-$LIBGPG_ERROR_VER
    - ./configure --host "$TARGET" --prefix="$PREFIX" --with-pic --enable-fast-install --disable-dependency-tracking --enable-static --disable-shared --disable-nls --disable-doc --disable-languages --disable-tests
    - make -j$(nproc) install

    - apt-get update && apt-get install -y --no-install-recommends gnupg2 && rm -rf /var/lib/apt/lists/*

    - export LIBASSUAN_VER=2.5.3
    - cd /usr/src
    - curl -sSL "https://www.gnupg.org/ftp/gcrypt/libassuan/libassuan-${LIBASSUAN_VER}.tar.bz2" | tar -xj
    - cd "libassuan-$LIBASSUAN_VER"
    - ./configure --host "$TARGET" --prefix="$PREFIX" --with-pic --enable-fast-install --disable-dependency-tracking --enable-static --disable-shared --disable-doc --with-gpg-error-prefix="$PREFIX"
    - make -j$(nproc) install

    - export GPGME_VER=1.14.0
    - cd /usr/src
    - curl -sSL "https://www.gnupg.org/ftp/gcrypt/gpgme/gpgme-${GPGME_VER}.tar.bz2" | tar -xj
    - cd "gpgme-$GPGME_VER"
    - ./configure --host "$TARGET" --prefix="$PREFIX" --with-pic --enable-fast-install --disable-dependency-tracking --enable-static --disable-shared --disable-languages --disable-gpg-test --with-gpg-error-prefix="$PREFIX" --with-libassuan-prefix="$PREFIX"
    - make -j$(nproc) install

    - export LIBGPG_ERROR_INCLUDE="$PREFIX/include"
    - export LIBGPG_ERROR_LIB_DIR="$PREFIX/lib"
    - export LIBGPG_ERROR_LIBS="gpg-error"
    - export LIBGPG_ERROR_STATIC=1
    - export GPGME_INCLUDE="$PREFIX/include"
    - export GPGME_LIB_DIR="$PREFIX/lib"
    - export GPGME_LIBS="gpgme:assuan"
    - export GPGME_STATIC=1

    - cd /builds/timvisee/prs/

    - rustup target add $RUST_TARGET
    - cargo build --target=$RUST_TARGET --release --verbose

    # Prepare the release artifact, strip it
    - find . -name prs -exec ls -lah {} \;
    - mv target/$RUST_TARGET/release/prs ./prs-$RUST_TARGET
    - strip -g ./prs-$RUST_TARGET
  artifacts:
    name: prs-x86_64-linux-musl
    paths:
      - prs-$RUST_TARGET
    expire_in: 1 month

# Run the unit tests through Cargo
test-cargo:
  stage: test
  needs: []
  dependencies: []
  script:
    - cargo test --verbose

# Cargo crate release
release-crate:
  stage: release
  dependencies: []
  only:
    - /^v(\d+\.)*\d+$/
  script:
    - echo "Creating release crate to publish on crates.io..."
    - echo $CARGO_TOKEN | cargo login
    - echo "Publishing crate to crates.io..."
    - cargo publish --verbose --allow-dirty
