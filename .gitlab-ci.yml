image: "rust:slim"

stages:
  - check
  - build
  - test
  - release
  - package

# Variable defaults
variables:
  RUST_VERSION: stable
  RUST_TARGET: x86_64-unknown-linux-gnu

# Cache rust/cargo/build artifacts
cache:
  key: "$CI_PIPELINE_ID-$RUST_VERSION"
  paths:
    - /usr/local/cargo/registry/
    - /usr/local/rustup/toolchains/
    - /usr/local/rustup/update-hashes/
    - target/

# Install compiler and OpenSSL dependencies
before_script:
  - apt-get update
  - apt-get install -y --no-install-recommends libgpgme-dev build-essential pkg-config xorg-dev python3 libx11-xcb-dev libgl1-mesa-dev
  - |
    rustup install $RUST_VERSION
    rustup default $RUST_VERSION
  - |
    rustc --version
    cargo --version

# Check on stable, beta and nightly 
.check-base: &check-base
  stage: check
  script:
    - cargo check --verbose
check-stable:
  <<: *check-base
check-beta:
  <<: *check-base
  variables:
    RUST_VERSION: beta
check-nightly:
  <<: *check-base
  variables:
    RUST_VERSION: nightly
check-old:
  <<: *check-base
  variables:
    RUST_VERSION: "1.41.0"

# Build using Rust stable
build-x86_64-linux-gnu:
  stage: build
  needs:
    - check-stable
  script:
    - cargo build --target=$RUST_TARGET --release --verbose

# Build a static version
build-x86_64-linux-musl:
  stage: build
  needs:
    - check-stable
  variables:
    RUST_TARGET: x86_64-unknown-linux-musl
  script:
    - rustup target add $RUST_TARGET
    - cargo build --target=$RUST_TARGET --release --verbose

# Run the unit tests through Cargo
test-cargo:
  stage: test
  needs:
    - check-stable
  dependencies: []
  script:
    - cargo test --verbose
